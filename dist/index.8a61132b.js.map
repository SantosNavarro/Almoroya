{"mappings":"AAAA,cAAc,eAAe,IAAI,wCAAwC;AACzE,cAAc,YAAY,CAAC,gBAAgB,kCAAkC;AAC7E,cAAc,UAAU,CAAC,gBAAgB,uBAAuB;AAChE,cAAc,SAAS,CAAC,gBAAgB,sBAAsB;AAC9D,cAAc,WAAW,IAAI,sCAAsC;AACnE,cAAc,MAAM,CAAC,gBAAgB,oBAAoB;AACzD,cAAc,MAAM,CAAC,gBAAgB,oBAAoB;AACzD,cAAc,SAAS,IAAI,uBAAuB;AAClD,cAAc,SAAS,IAAI,uBAAuB;AAClD,cAAc,KAAK,IAAI,yBAAyB;AAChD,cAAc,EAAE,CAAC,UAAU,SAAS,OAAO,GAAgC;AAC3E,cAAc,EAAE,CAAC,UAAU,SAAS,OAAO,GAA+B;AAC1E,cAAc,EAAE,CAAC,iBAAiB,YAA2C;AAC7E,cAAc,EAAE,CAAC,SAAS,YAA0C","sources":["src/cookie-consent-api.js"],"sourcesContent":["cookieConsent.isAllConfigured(); /* all services are accepted or refused */ \r\ncookieConsent.isConfigured('serviceName'); /* service is accepted or refused */ \r\ncookieConsent.isAccepted('serviceName'); /* service is accepted */ \r\ncookieConsent.isRefused('serviceName'); /* service is refused */ \r\ncookieConsent.getServices(); /* returns services array from config */\r\ncookieConsent.accept('serviceName'); /* accept a service */\r\ncookieConsent.refuse('serviceName'); /* refuse a service */\r\ncookieConsent.acceptAll(); /* accept all services */\r\ncookieConsent.refuseAll(); /* refuse all services */\r\ncookieConsent.reset(); /* delete consent cookie */\r\ncookieConsent.on('accept', function(service) { /* a service is accepted */ });\r\ncookieConsent.on('refuse', function(service) { /* a service is refused */ });\r\ncookieConsent.on('allConfigured', function() { /* all services configured */ });\r\ncookieConsent.on('reset', function() { /* consent cookie deleted */ });\r\n\r\n"],"names":[],"version":3,"file":"index.8a61132b.js.map","sourceRoot":"/__parcel_source_root/"}